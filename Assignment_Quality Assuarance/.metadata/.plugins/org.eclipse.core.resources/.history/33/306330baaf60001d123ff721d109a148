package First_Framework;

import java.util.regex.Pattern;
import java.util.concurrent.TimeUnit;
import org.testng.annotations.*;
import static org.testng.Assert.*;
import org.openqa.selenium.*;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.Select;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.util.Properties;
import org.apache.commons.io.FileUtils;
import java.time.Duration;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

public class TraineeTestCase {
	
	private static Logger log = LogManager.getLogger(LogManager.ROOT_LOGGER_NAME);
	private WebDriver driver;
	private String baseUrl;
	private boolean acceptNextAlert = true;
	private StringBuffer verificationErrors = new StringBuffer();
	private JavascriptExecutor js;
	private InputStream input;

	@BeforeClass(alwaysRun = true)
	public void setUp() throws Exception {
log.info("Starting the Trainee Test Case");
		
		//input = new FileInputStream("C:\\Users\\Kishori\\eclipse-workspace\\Assignment_Quality Assuarance\\HR_Management\\Configuration.properties");
		input = new FileInputStream("Configuration.properties");

		Properties prop = new Properties();

		// load a properties file
		prop.load(input);
		log.info(prop.toString());
		// get the property value and print it out
		System.out.println(prop.toString());
		System.out.println(prop.getProperty("web.adminUsername"));
		System.out.println(prop.getProperty("web.adminPassword"));
		System.out.println(prop.getProperty("web.chromeDriverPath"));
		System.out.println(prop.getProperty("db.url"));

		System.setProperty("webdriver.chrome.driver", prop.getProperty("web.chromeDriverPath"));
		
		//System.setProperty("webdriver.chrome.driver", "C:\\Users\\Kishori\\eclipse-workspace\\Assignment_Quality Assuarance\\HR_Management\\Libraries\\chromedriver.exe");
		driver = new ChromeDriver();
		baseUrl = "https://www.google.com/";
		driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(30));
		js = (JavascriptExecutor) driver;
	}

	@Test
	public void testUntitledTestCase() throws Exception {
		driver.get("https://demo.actiplans.com/login.do");
		driver.findElement(By.xpath("//a[@id='loginButton']/div")).click();
		driver.get("https://demo.actiplans.com/user/my_schedule.do");
		driver.findElement(By.id("container_employees")).click();
		driver.get("https://demo.actiplans.com/administration/userlist.do");
		driver.findElement(By.linkText("2")).click();
		driver.findElement(By.linkText("Reports")).click();
		driver.get("https://demo.actiplans.com/reports/reports.do");
		driver.get("https://demo.actiplans.com/reports/ltr.do");
		driver.findElement(By.id("logoutLink")).click();
		driver.get("https://demo.actiplans.com/login.do");
		driver.findElement(By.id("username")).clear();
		driver.findElement(By.id("username")).sendKeys("admin");
	}

	@AfterClass(alwaysRun = true)
	public void tearDown() throws Exception {
		driver.quit();
		String verificationErrorString = verificationErrors.toString();
		if (!"".equals(verificationErrorString)) {
			fail(verificationErrorString);
		}
	}

	private boolean isElementPresent(By by) {
		try {
			driver.findElement(by);
			return true;
		} catch (NoSuchElementException e) {
			return false;
		}
	}

	private boolean isAlertPresent() {
		try {
			driver.switchTo().alert();
			return true;
		} catch (NoAlertPresentException e) {
			return false;
		}
	}

	private String closeAlertAndGetItsText() {
		try {
			Alert alert = driver.switchTo().alert();
			String alertText = alert.getText();
			if (acceptNextAlert) {
				alert.accept();
			} else {
				alert.dismiss();
			}
			return alertText;
		} finally {
			acceptNextAlert = true;
		}
	}
}